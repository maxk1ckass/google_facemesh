{"id":"s8zH","dependencies":[{"name":"./index.js","dynamic":true,"resolved":"c:\\max\\tfjs-models\\facemesh\\demo\\index.js","parent":"c:\\max\\tfjs-models\\facemesh\\demo\\index.html"},{"name":"c:\\max\\tfjs-models\\facemesh\\demo\\.babelrc","includedInParent":true,"mtime":1590797187499},{"name":"c:\\max\\tfjs-models\\facemesh\\demo\\package.json","includedInParent":true,"mtime":1590915878799}],"generated":{"html":"<head><script src=\"https://cdn.jsdelivr.net/npm/three@0.106.2/build/three.min.js\"></script><script src=\"https://cdn.jsdelivr.net/npm/scatter-gl@0.0.1/lib/scatter-gl.min.js\"></script><style>#scatter-gl-container,.canvas-wrapper{display:inline-block;vertical-align:top}#scatter-gl-container{border:1px solid #000;position:relative}#scatter-gl-container canvas{transform:translate3d(-50%,-50%,0);left:50%;top:50%;position:absolute}input::-webkit-inner-spin-button,input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}input[type=number]{-moz-appearance:textfield}.green{color:green}#main{max-width:1000px;margin:auto}button{cursor:pointer}#controls{margin:10px auto;text-align:center}#controls button{font-size:20px;padding:5px}#controls input{width:60px}#controls input::placeholder{font-size:12px}#capture-predictions,.canvas-wrapper.capture canvas{width:400px;height:400px}#capture-predictions{overflow-y:scroll}</style><script>function e(e,t){let n=document.createElement(\"a\");n.download=t,n.href=e,document.body.appendChild(n),n.click(),document.body.removeChild(n)}function t(t){try{e(function(e){return`data:application/json;base64,${btoa(JSON.stringify(e,null,2))}`}(t),`predictions-${Date.now()}.json`)}catch(n){console.log(n)}}function n(e,t){return new Array(e.length).fill(0).map(e=>new Array(t[0].length).fill(0)).map((n,a)=>n.map((n,o)=>e[a].reduce((e,n,a)=>e+n*t[a][o],0)))}function a(e,t){return new Array(e.length).fill(0).map(t=>new Array(e[0].length).fill(0)).map((n,a)=>n.map((n,o)=>e[a][o]/t))}function o(t,a=!1,o=null){try{e(function(e){let{mesh:t,scaledMesh:r,f:c}=e,i=a?r:t;console.log(\"before custom scale:\",i),o&&(i=n(i,o),console.log(\"after customScaling:\",i));let u=\"\";return u+=(i||[]).map(e=>`v ${e[0]} ${e[1]} ${e[2]}`).join(\"\\n\"),u+=\"\\n\"+(c||[]).map(e=>`f ${e[0]+1} ${e[1]+1} ${e[2]+1}`).join(\"\\n\"),`data:text/plain;base64,${btoa(u)}`}(t),`facemesh${o?`-scaled[${o[0][0]},${o[1][1]}]`:a?\"-scaled\":\"\"}-${Date.now()}.obj`)}catch(r){console.log(r)}}const r=e=>{e.getContext(\"2d\").clearRect(0,0,e.width,e.height)},c=e=>{let t=e.getContext(\"2d\");t.clearRect(0,0,e.width,e.height),t.font=\"48px serif\",t.fillText(\"Average values =>\",200,200)};window.saveCapturePredictionsJson=(()=>{t(window.capturePredictionData)}),window.saveCapturePredictionsObj=((e=!0)=>{o(window.capturePredictionData,e,null)}),window.saveCapturePredictionsCustomeObj=(()=>{let e=document.querySelector(\"#scale-x\").value,t=document.querySelector(\"#scale-y\").value;const n=[[e=e?parseFloat(e):1,0,0],[0,t=t?parseFloat(t):1,0],[0,0,1]];o(window.capturePredictionData,!1,n)}),window.singleCapture=(()=>{window.capturePredictionData={},window.capturedFrameCount=0,window.captureNextFrame=!0}),window.continuousCapture=(()=>{let e=document.querySelector(\"#duration\").value,t=document.querySelector(\"#fps\").value;e=e?parseFloat(e):5,t=t?parseFloat(t):10,window.capturePredictionData={},window.capturedFrameCount=0,window.endContinuousCapture=new Date(Date.now()+1e3*e);let n=window.setInterval(()=>{new Date>window.endContinuousCapture?(clearInterval(n),setTimeout(()=>{window.capturePredictionData.mesh=a(window.capturePredictionData.mesh,window.capturedFrameCount),window.capturePredictionData.scaledMesh=a(window.capturePredictionData.scaledMesh,window.capturedFrameCount),c(document.querySelector(\"#capture-scatter-gl\")),r(document.querySelector(\"#capture-frame\")),document.querySelector(\"#capture-predictions\").innerHTML=JSON.stringify(window.capturePredictionData,null,2)},500)):window.captureNextFrame=!0},parseInt(1e3/t))});</script></head><body> <div id=\"main\"> <div class=\"container\"> <div class=\"canvas-wrapper\"> <canvas id=\"output\"></canvas> <video id=\"video\" playsinline=\"\" style=\"-webkit-transform:scaleX(-1);transform:scaleX(-1);visibility:hidden;width:auto;height:auto;\"></video> </div> <div id=\"scatter-gl-container\"></div> </div>  <hr> <div id=\"controls\" class=\"buttons\"> First <button class=\"green\" onclick=\"window.singleCapture();\"> Capture </button> &nbsp;Or <input id=\"duration\" type=\"number\" placeholder=\"sec(5)\"> <input id=\"fps\" type=\"number\" placeholder=\"fps(10)\"> <button class=\"green\" onclick=\"window.continuousCapture();\"> Cont Capture </button> Then &nbsp;<button onclick=\"window.saveCapturePredictionsObj(false);\"> Save OBJ </button> &nbsp;<button onclick=\"window.saveCapturePredictionsObj(true);\"> Scaled OBJ </button> &nbsp;Or <input id=\"scale-x\" type=\"number\" placeholder=\"scaleX(1)\"> <input id=\"scale-y\" type=\"number\" placeholder=\"scaleY(1)\"> <button onclick=\"window.saveCapturePredictionsCustomeObj();\"> Custom OBJ </button> </div>  <div class=\"container\"> <div class=\"canvas-wrapper capture\"> <table> <thead> <tr> <th>Captured Frame</th> <th>Captured Scatter GL</th> <th> Predictions &nbsp;<button onclick=\"window.saveCapturePredictionsJson();\"> Save JSON </button> </th> </tr> </thead> <tbody> <tr> <td> <canvas id=\"capture-frame\"></canvas> </td> <td> <canvas id=\"capture-scatter-gl\"></canvas> </td> <td> <pre id=\"capture-predictions\"></pre> </td> </tr> </tbody> </table> </div> </div> </div> </body><script src=\"https://cdnjs.cloudflare.com/ajax/libs/dat-gui/0.7.6/dat.gui.min.js\"></script><script src=\"168726dbe96b3ce427e7fedce31bb0bc.js\"></script>"},"sourceMaps":null,"error":null,"hash":"839be47cdd11d5a67d0e224a0bdab835","cacheData":{"env":{}}}